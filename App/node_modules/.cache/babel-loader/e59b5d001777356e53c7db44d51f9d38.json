{"remainingRequest":"C:\\Users\\APITECH\\Desktop\\MESSI\\NEW\\App\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\APITECH\\Desktop\\MESSI\\NEW\\App\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\APITECH\\Desktop\\MESSI\\NEW\\App\\src\\router.js","dependencies":[{"path":"C:\\Users\\APITECH\\Desktop\\MESSI\\NEW\\App\\src\\router.js","mtime":1574127833968},{"path":"C:\\Users\\APITECH\\Desktop\\MESSI\\NEW\\App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572896892446},{"path":"C:\\Users\\APITECH\\Desktop\\MESSI\\NEW\\App\\node_modules\\babel-loader\\lib\\index.js","mtime":1572896885651},{"path":"C:\\Users\\APITECH\\Desktop\\MESSI\\NEW\\App\\node_modules\\eslint-loader\\index.js","mtime":1572896903258}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from \"./views/Home.vue\";\nimport Companies from \"./views/Companies\";\nimport Reserve from \"./views/Reserve\";\nimport DoReserve from \"./views/DoReserve\";\nimport Login from \"./views/Login\";\nimport Register from \"./views/Register\";\nimport InfoCompany from '@/views/InfoCompany';\nimport Reservation from '@/views/Reservation';\nimport Account from '@/views/Account';\nimport Test from '@/views/Test';\nimport Logout from \"./views/Logout.vue\";\nVue.use(Router);\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'login',\n    component: Login,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/home',\n    name: 'home',\n    component: Home,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: '/companies',\n    name: 'companies',\n    component: Companies\n  }, {\n    path: '/reserve',\n    name: 'reserve',\n    component: Reserve\n  }, {\n    path: '/do_reserve/:companyId/reserve',\n    name: 'do_reserve',\n    component: DoReserve\n  }, {\n    path: '/register',\n    name: 'register',\n    component: Register,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/companies/:companyId/info',\n    name: 'InfoCompany',\n    component: InfoCompany\n  }, {\n    path: '/field/:fieldId/reservar',\n    name: 'Reservation',\n    component: Reservation\n  }, {\n    path: '/account',\n    name: 'account',\n    component: Account\n  }, {\n    path: '/test',\n    name: 'test',\n    component: Test\n  }, {\n    path: '/logout',\n    name: 'logout',\n    component: Logout\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    if (store.getters.isLoggedIn) {\n      next();\n      return;\n    }\n\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;",{"version":3,"sources":["C:/Users/APITECH/Desktop/MESSI/NEW/App/src/router.js"],"names":["Vue","Router","Home","Companies","Reserve","DoReserve","Login","Register","InfoCompany","Reservation","Account","Test","Logout","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","beforeEach","to","from","next","matched","some","record","store","getters","isLoggedIn"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Home from './views/Home.vue'\r\nimport Companies from './views/Companies'\r\nimport Reserve from './views/Reserve'\r\nimport DoReserve from './views/DoReserve'\r\nimport Login from './views/Login'\r\nimport Register from './views/Register'\r\nimport InfoCompany from '@/views/InfoCompany'\r\nimport Reservation from '@/views/Reservation'\r\nimport Account from '@/views/Account'\r\nimport Test from '@/views/Test'\r\nimport Logout from './views/Logout.vue'\r\n\r\n\r\nVue.use(Router)\r\n\r\nlet router = new Router({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes: [\r\n    { path: '/', name: 'login', component: Login, meta: { requiresAuth: true }\r\n  },\r\n    { path: '/home', name: 'home', component: Home, meta: { requiresAuth: false }  },\r\n    { path: '/companies', name: 'companies', component: Companies },\r\n    { path: '/reserve', name: 'reserve', component: Reserve },\r\n    { path: '/do_reserve/:companyId/reserve', name: 'do_reserve', component: DoReserve },\r\n    { path: '/register', name:'register', component: Register, meta: { requiresAuth: true }\r\n  },\r\n    { path:'/companies/:companyId/info' , name:'InfoCompany', component: InfoCompany},\r\n    { path:'/field/:fieldId/reservar', name:'Reservation', component: Reservation},\r\n    { path:'/account', name: 'account', component: Account},\r\n    { path:'/test', name: 'test',  component: Test},\r\n    { path: '/logout', name: 'logout', component: Logout }\r\n  ]\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  if(to.matched.some(record => record.meta.requiresAuth)) {\r\n    if (store.getters.isLoggedIn) {\r\n      next()\r\n      return\r\n    }\r\n    next('/login') \r\n  } else {\r\n    next() \r\n  }\r\n})\r\nexport default router\r\n"]}]}