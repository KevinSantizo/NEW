{"remainingRequest":"C:\\Users\\KEVITO\\Desktop\\PROJECTS\\CERTIFI\\App\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\KEVITO\\Desktop\\PROJECTS\\CERTIFI\\App\\node_modules\\vuetify\\lib\\services\\theme\\utils.js","dependencies":[{"path":"C:\\Users\\KEVITO\\Desktop\\PROJECTS\\CERTIFI\\App\\node_modules\\vuetify\\lib\\services\\theme\\utils.js","mtime":1571192537069},{"path":"C:\\Users\\KEVITO\\Desktop\\PROJECTS\\CERTIFI\\App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1571192465872},{"path":"C:\\Users\\KEVITO\\Desktop\\PROJECTS\\CERTIFI\\App\\node_modules\\babel-loader\\lib\\index.js","mtime":1571192458372}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"C:\\\\Users\\\\KEVITO\\\\Desktop\\\\PROJECTS\\\\CERTIFI\\\\App\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport _typeof from \"C:\\\\Users\\\\KEVITO\\\\Desktop\\\\PROJECTS\\\\CERTIFI\\\\App\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.string.anchor\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\KEVITO\\\\Desktop\\\\PROJECTS\\\\CERTIFI\\\\App\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport { colorToInt, intToHex, colorToHex } from \"../../util/colorUtils\";\nimport * as sRGB from \"../../util/color/transformSRGB\";\nimport * as LAB from \"../../util/color/transformCIELAB\";\nexport function parse(theme) {\n  var isItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var anchor = theme.anchor,\n      variant = _objectWithoutProperties(theme, [\"anchor\"]);\n\n  var colors = Object.keys(variant);\n  var parsedTheme = {};\n\n  for (var i = 0; i < colors.length; ++i) {\n    var name = colors[i];\n    var value = theme[name];\n    if (value == null) continue;\n\n    if (isItem) {\n      /* istanbul ignore else */\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\n        parsedTheme[name] = colorToHex(value);\n      }\n    } else if (_typeof(value) === 'object') {\n      parsedTheme[name] = parse(value, true);\n    } else {\n      parsedTheme[name] = genVariations(name, colorToInt(value));\n    }\n  }\n\n  if (!isItem) {\n    parsedTheme.anchor = anchor || parsedTheme.base || parsedTheme.primary.base;\n  }\n\n  return parsedTheme;\n}\n/**\r\n * Generate the CSS for a base color (.primary)\r\n */\n\nvar genBaseColor = function genBaseColor(name, value) {\n  return \"\\n.v-application .\".concat(name, \" {\\n  background-color: \").concat(value, \" !important;\\n  border-color: \").concat(value, \" !important;\\n}\\n.v-application .\").concat(name, \"--text {\\n  color: \").concat(value, \" !important;\\n  caret-color: \").concat(value, \" !important;\\n}\");\n};\n/**\r\n * Generate the CSS for a variant color (.primary.darken-2)\r\n */\n\n\nvar genVariantColor = function genVariantColor(name, variant, value) {\n  var _variant$split = variant.split(/(\\d)/, 2),\n      _variant$split2 = _slicedToArray(_variant$split, 2),\n      type = _variant$split2[0],\n      n = _variant$split2[1];\n\n  return \"\\n.v-application .\".concat(name, \".\").concat(type, \"-\").concat(n, \" {\\n  background-color: \").concat(value, \" !important;\\n  border-color: \").concat(value, \" !important;\\n}\\n.v-application .\").concat(name, \"--text.text--\").concat(type, \"-\").concat(n, \" {\\n  color: \").concat(value, \" !important;\\n  caret-color: \").concat(value, \" !important;\\n}\");\n};\n\nvar genColorVariableName = function genColorVariableName(name) {\n  var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'base';\n  return \"--v-\".concat(name, \"-\").concat(variant);\n};\n\nvar genColorVariable = function genColorVariable(name) {\n  var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'base';\n  return \"var(\".concat(genColorVariableName(name, variant), \")\");\n};\n\nexport function genStyles(theme) {\n  var cssVar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var anchor = theme.anchor,\n      variant = _objectWithoutProperties(theme, [\"anchor\"]);\n\n  var colors = Object.keys(variant);\n  if (!colors.length) return '';\n  var variablesCss = '';\n  var css = '';\n  var aColor = cssVar ? genColorVariable('anchor') : anchor;\n  css += \".v-application a { color: \".concat(aColor, \"; }\");\n  cssVar && (variablesCss += \"  \".concat(genColorVariableName('anchor'), \": \").concat(anchor, \";\\n\"));\n\n  for (var i = 0; i < colors.length; ++i) {\n    var name = colors[i];\n    var value = theme[name];\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base);\n    cssVar && (variablesCss += \"  \".concat(genColorVariableName(name), \": \").concat(value.base, \";\\n\"));\n    var variants = Object.keys(value);\n\n    for (var _i = 0; _i < variants.length; ++_i) {\n      var _variant = variants[_i];\n      var variantValue = value[_variant];\n      if (_variant === 'base') continue;\n      css += genVariantColor(name, _variant, cssVar ? genColorVariable(name, _variant) : variantValue);\n      cssVar && (variablesCss += \"  \".concat(genColorVariableName(name, _variant), \": \").concat(variantValue, \";\\n\"));\n    }\n  }\n\n  if (cssVar) {\n    variablesCss = \":root {\\n\".concat(variablesCss, \"}\\n\\n\");\n  }\n\n  return variablesCss + css;\n}\nexport function genVariations(name, value) {\n  var values = {\n    base: intToHex(value)\n  };\n\n  for (var i = 5; i > 0; --i) {\n    values[\"lighten\".concat(i)] = intToHex(lighten(value, i));\n  }\n\n  for (var _i2 = 1; _i2 <= 4; ++_i2) {\n    values[\"darken\".concat(_i2)] = intToHex(darken(value, _i2));\n  }\n\n  return values;\n}\n\nfunction lighten(value, amount) {\n  var lab = LAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] + amount * 10;\n  return sRGB.fromXYZ(LAB.toXYZ(lab));\n}\n\nfunction darken(value, amount) {\n  var lab = LAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] - amount * 10;\n  return sRGB.fromXYZ(LAB.toXYZ(lab));\n}",{"version":3,"sources":["C:/Users/KEVITO/Desktop/PROJECTS/CERTIFI/App/node_modules/vuetify/lib/services/theme/utils.js"],"names":["colorToInt","intToHex","colorToHex","sRGB","LAB","parse","theme","isItem","anchor","variant","colors","Object","keys","parsedTheme","i","length","name","value","startsWith","genVariations","base","primary","genBaseColor","genVariantColor","split","type","n","genColorVariableName","genColorVariable","genStyles","cssVar","variablesCss","css","aColor","variants","variantValue","values","lighten","darken","amount","lab","fromXYZ","toXYZ"],"mappings":"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","sourcesContent":["import { colorToInt, intToHex, colorToHex } from '../../util/colorUtils';\r\nimport * as sRGB from '../../util/color/transformSRGB';\r\nimport * as LAB from '../../util/color/transformCIELAB';\r\nexport function parse(theme, isItem = false) {\r\n  const {\r\n    anchor,\r\n    ...variant\r\n  } = theme;\r\n  const colors = Object.keys(variant);\r\n  const parsedTheme = {};\r\n\r\n  for (let i = 0; i < colors.length; ++i) {\r\n    const name = colors[i];\r\n    const value = theme[name];\r\n    if (value == null) continue;\r\n\r\n    if (isItem) {\r\n      /* istanbul ignore else */\r\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\r\n        parsedTheme[name] = colorToHex(value);\r\n      }\r\n    } else if (typeof value === 'object') {\r\n      parsedTheme[name] = parse(value, true);\r\n    } else {\r\n      parsedTheme[name] = genVariations(name, colorToInt(value));\r\n    }\r\n  }\r\n\r\n  if (!isItem) {\r\n    parsedTheme.anchor = anchor || parsedTheme.base || parsedTheme.primary.base;\r\n  }\r\n\r\n  return parsedTheme;\r\n}\r\n/**\r\n * Generate the CSS for a base color (.primary)\r\n */\r\n\r\nconst genBaseColor = (name, value) => {\r\n  return `\r\n.v-application .${name} {\r\n  background-color: ${value} !important;\r\n  border-color: ${value} !important;\r\n}\r\n.v-application .${name}--text {\r\n  color: ${value} !important;\r\n  caret-color: ${value} !important;\r\n}`;\r\n};\r\n/**\r\n * Generate the CSS for a variant color (.primary.darken-2)\r\n */\r\n\r\n\r\nconst genVariantColor = (name, variant, value) => {\r\n  const [type, n] = variant.split(/(\\d)/, 2);\r\n  return `\r\n.v-application .${name}.${type}-${n} {\r\n  background-color: ${value} !important;\r\n  border-color: ${value} !important;\r\n}\r\n.v-application .${name}--text.text--${type}-${n} {\r\n  color: ${value} !important;\r\n  caret-color: ${value} !important;\r\n}`;\r\n};\r\n\r\nconst genColorVariableName = (name, variant = 'base') => `--v-${name}-${variant}`;\r\n\r\nconst genColorVariable = (name, variant = 'base') => `var(${genColorVariableName(name, variant)})`;\r\n\r\nexport function genStyles(theme, cssVar = false) {\r\n  const {\r\n    anchor,\r\n    ...variant\r\n  } = theme;\r\n  const colors = Object.keys(variant);\r\n  if (!colors.length) return '';\r\n  let variablesCss = '';\r\n  let css = '';\r\n  const aColor = cssVar ? genColorVariable('anchor') : anchor;\r\n  css += `.v-application a { color: ${aColor}; }`;\r\n  cssVar && (variablesCss += `  ${genColorVariableName('anchor')}: ${anchor};\\n`);\r\n\r\n  for (let i = 0; i < colors.length; ++i) {\r\n    const name = colors[i];\r\n    const value = theme[name];\r\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base);\r\n    cssVar && (variablesCss += `  ${genColorVariableName(name)}: ${value.base};\\n`);\r\n    const variants = Object.keys(value);\r\n\r\n    for (let i = 0; i < variants.length; ++i) {\r\n      const variant = variants[i];\r\n      const variantValue = value[variant];\r\n      if (variant === 'base') continue;\r\n      css += genVariantColor(name, variant, cssVar ? genColorVariable(name, variant) : variantValue);\r\n      cssVar && (variablesCss += `  ${genColorVariableName(name, variant)}: ${variantValue};\\n`);\r\n    }\r\n  }\r\n\r\n  if (cssVar) {\r\n    variablesCss = `:root {\\n${variablesCss}}\\n\\n`;\r\n  }\r\n\r\n  return variablesCss + css;\r\n}\r\nexport function genVariations(name, value) {\r\n  const values = {\r\n    base: intToHex(value)\r\n  };\r\n\r\n  for (let i = 5; i > 0; --i) {\r\n    values[`lighten${i}`] = intToHex(lighten(value, i));\r\n  }\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    values[`darken${i}`] = intToHex(darken(value, i));\r\n  }\r\n\r\n  return values;\r\n}\r\n\r\nfunction lighten(value, amount) {\r\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value));\r\n  lab[0] = lab[0] + amount * 10;\r\n  return sRGB.fromXYZ(LAB.toXYZ(lab));\r\n}\r\n\r\nfunction darken(value, amount) {\r\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value));\r\n  lab[0] = lab[0] - amount * 10;\r\n  return sRGB.fromXYZ(LAB.toXYZ(lab));\r\n}\r\n//# sourceMappingURL=utils.js.map"]}]}