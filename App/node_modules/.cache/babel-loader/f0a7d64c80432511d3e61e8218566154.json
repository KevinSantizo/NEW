{"remainingRequest":"C:\\Users\\TETO PARKER\\Desktop\\KEV\\NEW\\App\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\TETO PARKER\\Desktop\\KEV\\NEW\\App\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\TETO PARKER\\Desktop\\KEV\\NEW\\App\\src\\components\\store\\store.js","dependencies":[{"path":"C:\\Users\\TETO PARKER\\Desktop\\KEV\\NEW\\App\\src\\components\\store\\store.js","mtime":1573777664979},{"path":"C:\\Users\\TETO PARKER\\Desktop\\KEV\\NEW\\App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573429945893},{"path":"C:\\Users\\TETO PARKER\\Desktop\\KEV\\NEW\\App\\node_modules\\babel-loader\\lib\\index.js","mtime":1573429941653},{"path":"C:\\Users\\TETO PARKER\\Desktop\\KEV\\NEW\\App\\node_modules\\eslint-loader\\index.js","mtime":1573429959617}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n  mutations: {\n    auth_request: function auth_request(state) {\n      state.status = 'loading';\n    },\n    auth_success: function auth_success(state, token, user) {\n      state.status = 'success';\n      state.token = token;\n      state.user = user;\n    },\n    auth_error: function auth_error(state) {\n      state.status = 'error';\n    },\n    logout: function logout(state) {\n      state.status = '';\n      state.token = '';\n    }\n  },\n  actions: {\n    login: function login(_ref, user) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        commit('auth_request');\n        axios({\n          url: 'http://localhost:8000/api/api-token-auth/',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          var token = resp.data.token;\n          var base64Url = token.split('.')[1];\n          var base64 = base64Url.replace('-', '+').replace('_', '/');\n          console.log(JSON.parse(window.atob(base64)));\n          var user = resp.data.user;\n          localStorage.setItem('token', token);\n          localStorage.setItem('user.id', JSON.parse(window.atob(base64)));\n          axios.defaults.headers.common['Authorization'] = token;\n          commit('auth_success', token, user);\n          resolve(resp);\n        }).catch(function (err) {\n          commit('auth_error');\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    register: function register(_ref2, user) {\n      var _this = this;\n\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        commit('auth_request');\n        axios({\n          url: 'http://localhost:8000/api/users/',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          var user = resp.data.user;\n          commit('auth_success', user);\n\n          _this.$router.push('/');\n\n          resolve(resp);\n        }).catch(function (err) {\n          commit('auth_error', err);\n          reject(err);\n        });\n      });\n    },\n    logout: function logout(context) {\n      if (context.getters.isLoggedIn) {\n        return new Promise(function (resolve, reject) {\n          localStorage.removeItem('token');\n          context.commit('logout');\n          resolve();\n        }).catch(function (err) {\n          localStorage.removeItem('token');\n          context.commit('logout');\n          reject(err);\n        });\n      }\n    }\n  },\n  getters: {\n    isLoggedIn: function isLoggedIn(state) {\n      return !!state.token;\n    },\n    authStatus: function authStatus(state) {\n      return state.status;\n    }\n  }\n});",{"version":3,"sources":["C:/Users/TETO PARKER/Desktop/KEV/NEW/App/src/components/store/store.js"],"names":["Vue","Vuex","axios","swal","use","Store","state","status","token","localStorage","getItem","user","mutations","auth_request","auth_success","auth_error","logout","actions","login","commit","Promise","resolve","reject","url","data","method","then","resp","base64Url","split","base64","replace","console","log","JSON","parse","window","atob","setItem","defaults","headers","common","catch","err","removeItem","register","$router","push","context","getters","isLoggedIn","authStatus"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport axios from 'axios'\r\nimport swal from 'sweetalert'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n    state: {\r\n        status: '',\r\n        token: localStorage.getItem('token') || '',\r\n        user: {},\r\n    },\r\n    mutations: {\r\n        auth_request(state){\r\n            state.status = 'loading'\r\n        },\r\n        auth_success(state, token, user){\r\n            state.status = 'success'\r\n            state.token = token\r\n            state.user = user\r\n        },\r\n        auth_error(state){\r\n            state.status = 'error'\r\n        },\r\n        logout(state){\r\n            state.status = ''\r\n            state.token = ''\r\n        },\r\n    },\r\n    actions:{\r\n        login({commit}, user){\r\n            return new Promise((resolve, reject) => {\r\n                commit('auth_request')\r\n                axios({url: 'http://localhost:8000/api/api-token-auth/', data: user, method: 'POST' })\r\n                .then(resp => {\r\n                  const token = resp.data.token\r\n                  var base64Url = token.split('.')[1];\r\n                  var base64 = base64Url.replace('-', '+').replace('_', '/');\r\n                  console.log(JSON.parse(window.atob(base64)))        \r\n                  const user = resp.data.user\r\n                  localStorage.setItem('token', token)\r\n                  localStorage.setItem('user.id', JSON.parse(window.atob(base64)))\r\n                  axios.defaults.headers.common['Authorization'] = token\r\n                  commit('auth_success', token, user)\r\n                  resolve(resp)\r\n                }) .catch(err => {\r\n                    commit('auth_error')\r\n                    localStorage.removeItem('token')\r\n                    reject(err)\r\n            })\r\n        })\r\n    },\r\n    register({commit}, user){\r\n        return new Promise((resolve, reject) => {\r\n          commit('auth_request')\r\n          axios({url: 'http://localhost:8000/api/users/', data: user, method: 'POST' })\r\n          .then(resp => {\r\n            const user = resp.data.user\r\n            commit('auth_success', user)\r\n            this.$router.push('/')\r\n            resolve(resp)\r\n          })\r\n          .catch(err => {\r\n            commit('auth_error', err)\r\n            reject(err)\r\n          })\r\n        })\r\n    },\r\n    logout(context){\r\n        if(context.getters.isLoggedIn){\r\n          return new Promise((resolve, reject) => {\r\n                localStorage.removeItem('token')\r\n                context.commit('logout')\r\n                resolve()    \r\n              })\r\n              .catch(err => {\r\n                localStorage.removeItem('token')\r\n                context.commit('logout')\r\n                reject(err)\r\n              })\r\n        }\r\n      },\r\n    },\r\n      getters: {\r\n        isLoggedIn: state => !!state.token,\r\n        authStatus: state => state.status,\r\n    },\r\n})\r\n"]}]}