{"remainingRequest":"C:\\Users\\KEVITO\\Desktop\\MESSI\\NEW\\App\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\KEVITO\\Desktop\\MESSI\\NEW\\App\\node_modules\\vuetify\\lib\\mixins\\bootable\\index.js","dependencies":[{"path":"C:\\Users\\KEVITO\\Desktop\\MESSI\\NEW\\App\\node_modules\\vuetify\\lib\\mixins\\bootable\\index.js","mtime":1573027926008},{"path":"C:\\Users\\KEVITO\\Desktop\\MESSI\\NEW\\App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573027809411},{"path":"C:\\Users\\KEVITO\\Desktop\\MESSI\\NEW\\App\\node_modules\\babel-loader\\lib\\index.js","mtime":1573027799396}],"contextDependencies":[],"result":["// Utilities\nimport { removed } from \"../../util/console\"; // Types\n\nimport Vue from 'vue';\n/**\r\n * Bootable\r\n * @mixin\r\n *\r\n * Used to add lazy content functionality to components\r\n * Looks for change in \"isActive\" to automatically boot\r\n * Otherwise can be set manually\r\n */\n\n/* @vue/component */\n\nexport default Vue.extend().extend({\n  name: 'bootable',\n  props: {\n    eager: Boolean\n  },\n  data: function data() {\n    return {\n      isBooted: false\n    };\n  },\n  computed: {\n    hasContent: function hasContent() {\n      return this.isBooted || this.eager || this.isActive;\n    }\n  },\n  watch: {\n    isActive: function isActive() {\n      this.isBooted = true;\n    }\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this);\n    }\n  },\n  methods: {\n    showLazyContent: function showLazyContent(content) {\n      return this.hasContent ? content : undefined;\n    }\n  }\n});",{"version":3,"sources":["C:/Users/KEVITO/Desktop/MESSI/NEW/App/node_modules/vuetify/lib/mixins/bootable/index.js"],"names":["removed","Vue","extend","name","props","eager","Boolean","data","isBooted","computed","hasContent","isActive","watch","created","$attrs","methods","showLazyContent","content","undefined"],"mappings":"AAAA;AACA,SAASA,OAAT,6B,CAA8C;;AAE9C,OAAOC,GAAP,MAAgB,KAAhB;AACA;;;;;;;;;AASA;;AAEA,eAAeA,GAAG,CAACC,MAAJ,GAAaA,MAAb,CAAoB;AACjCC,EAAAA,IAAI,EAAE,UAD2B;AAEjCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEC;AADF,GAF0B;AAKjCC,EAAAA,IAAI,EAAE;AAAA,WAAO;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAP;AAAA,GAL2B;AAQjCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UADQ,wBACK;AACX,aAAO,KAAKF,QAAL,IAAiB,KAAKH,KAAtB,IAA+B,KAAKM,QAA3C;AACD;AAHO,GARuB;AAcjCC,EAAAA,KAAK,EAAE;AACLD,IAAAA,QADK,sBACM;AACT,WAAKH,QAAL,GAAgB,IAAhB;AACD;AAHI,GAd0B;AAqBjCK,EAAAA,OArBiC,qBAqBvB;AACR;AACA,QAAI,UAAU,KAAKC,MAAnB,EAA2B;AACzBd,MAAAA,OAAO,CAAC,MAAD,EAAS,IAAT,CAAP;AACD;AACF,GA1BgC;AA4BjCe,EAAAA,OAAO,EAAE;AACPC,IAAAA,eADO,2BACSC,OADT,EACkB;AACvB,aAAO,KAAKP,UAAL,GAAkBO,OAAlB,GAA4BC,SAAnC;AACD;AAHM;AA5BwB,CAApB,CAAf","sourcesContent":["// Utilities\r\nimport { removed } from '../../util/console'; // Types\r\n\r\nimport Vue from 'vue';\r\n/**\r\n * Bootable\r\n * @mixin\r\n *\r\n * Used to add lazy content functionality to components\r\n * Looks for change in \"isActive\" to automatically boot\r\n * Otherwise can be set manually\r\n */\r\n\r\n/* @vue/component */\r\n\r\nexport default Vue.extend().extend({\r\n  name: 'bootable',\r\n  props: {\r\n    eager: Boolean\r\n  },\r\n  data: () => ({\r\n    isBooted: false\r\n  }),\r\n  computed: {\r\n    hasContent() {\r\n      return this.isBooted || this.eager || this.isActive;\r\n    }\r\n\r\n  },\r\n  watch: {\r\n    isActive() {\r\n      this.isBooted = true;\r\n    }\r\n\r\n  },\r\n\r\n  created() {\r\n    /* istanbul ignore next */\r\n    if ('lazy' in this.$attrs) {\r\n      removed('lazy', this);\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    showLazyContent(content) {\r\n      return this.hasContent ? content : undefined;\r\n    }\r\n\r\n  }\r\n});\r\n//# sourceMappingURL=index.js.map"]}]}