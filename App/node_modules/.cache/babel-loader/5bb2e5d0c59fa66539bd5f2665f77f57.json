{"remainingRequest":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\certifi\\app\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\TETO PARKER\\Desktop\\kevin\\certifi\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\TETO PARKER\\Desktop\\kevin\\certifi\\app\\node_modules\\vuetify\\lib\\mixins\\colorable\\index.js","dependencies":[{"path":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\certifi\\app\\node_modules\\vuetify\\lib\\mixins\\colorable\\index.js","mtime":1571606068946},{"path":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\certifi\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1571605645513},{"path":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\certifi\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1571605989818},{"path":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\certifi\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1571605590929}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"C:\\\\Users\\\\TETO PARKER\\\\Desktop\\\\kevin\\\\certifi\\\\app\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\Users\\\\TETO PARKER\\\\Desktop\\\\kevin\\\\certifi\\\\app\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.match\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Vue from 'vue';\nimport { consoleError } from \"../../util/console\";\n\nfunction isCssColor(color) {\n  return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/);\n}\n\nexport default Vue.extend({\n  name: 'colorable',\n  props: {\n    color: String\n  },\n  methods: {\n    setBackgroundColor: function setBackgroundColor(color) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (isCssColor(color)) {\n        data.style = _objectSpread({}, data.style, {\n          'background-color': \"\".concat(color),\n          'border-color': \"\".concat(color)\n        });\n      } else if (color) {\n        data.class = _objectSpread({}, data.class, _defineProperty({}, color, true));\n      }\n\n      return data;\n    },\n    setTextColor: function setTextColor(color) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (isCssColor(color)) {\n        data.style = _objectSpread({}, data.style, {\n          color: \"\".concat(color),\n          'caret-color': \"\".concat(color)\n        });\n      } else if (color) {\n        var _color$toString$trim$ = color.toString().trim().split(' ', 2),\n            _color$toString$trim$2 = _slicedToArray(_color$toString$trim$, 2),\n            colorName = _color$toString$trim$2[0],\n            colorModifier = _color$toString$trim$2[1];\n\n        data.class = _objectSpread({}, data.class, _defineProperty({}, colorName + '--text', true));\n\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true;\n        }\n      }\n\n      return data;\n    }\n  }\n});",{"version":3,"sources":["C:/Users/TETO PARKER/Desktop/kevin/certifi/app/node_modules/vuetify/lib/mixins/colorable/index.js"],"names":["Vue","consoleError","isCssColor","color","match","extend","name","props","String","methods","setBackgroundColor","data","style","class","setTextColor","toString","trim","split","colorName","colorModifier"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,YAAT;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,SAAO,CAAC,CAACA,KAAF,IAAW,CAAC,CAACA,KAAK,CAACC,KAAN,CAAY,oBAAZ,CAApB;AACD;;AAED,eAAeJ,GAAG,CAACK,MAAJ,CAAW;AACxBC,EAAAA,IAAI,EAAE,WADkB;AAExBC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,KAAK,EAAEK;AADF,GAFiB;AAKxBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,kBADO,8BACYP,KADZ,EAC8B;AAAA,UAAXQ,IAAW,uEAAJ,EAAI;;AACnC,UAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAX,QAAAA,YAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,CAFkC,CAEa;;AAE/C,eAAOU,IAAP;AACD;;AAED,UAAI,OAAOA,IAAI,CAACE,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAZ,QAAAA,YAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,CAFkC,CAEa;;AAE/C,eAAOU,IAAP;AACD;;AAED,UAAIT,UAAU,CAACC,KAAD,CAAd,EAAuB;AACrBQ,QAAAA,IAAI,CAACC,KAAL,qBAAkBD,IAAI,CAACC,KAAvB;AACE,wCAAuBT,KAAvB,CADF;AAEE,oCAAmBA,KAAnB;AAFF;AAID,OALD,MAKO,IAAIA,KAAJ,EAAW;AAChBQ,QAAAA,IAAI,CAACE,KAAL,qBAAkBF,IAAI,CAACE,KAAvB,sBACGV,KADH,EACW,IADX;AAGD;;AAED,aAAOQ,IAAP;AACD,KA5BM;AA8BPG,IAAAA,YA9BO,wBA8BMX,KA9BN,EA8BwB;AAAA,UAAXQ,IAAW,uEAAJ,EAAI;;AAC7B,UAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAX,QAAAA,YAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,CAFkC,CAEa;;AAE/C,eAAOU,IAAP;AACD;;AAED,UAAI,OAAOA,IAAI,CAACE,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAZ,QAAAA,YAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,CAFkC,CAEa;;AAE/C,eAAOU,IAAP;AACD;;AAED,UAAIT,UAAU,CAACC,KAAD,CAAd,EAAuB;AACrBQ,QAAAA,IAAI,CAACC,KAAL,qBAAkBD,IAAI,CAACC,KAAvB;AACET,UAAAA,KAAK,YAAKA,KAAL,CADP;AAEE,mCAAkBA,KAAlB;AAFF;AAID,OALD,MAKO,IAAIA,KAAJ,EAAW;AAAA,oCACmBA,KAAK,CAACY,QAAN,GAAiBC,IAAjB,GAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CADnB;AAAA;AAAA,YACTC,SADS;AAAA,YACEC,aADF;;AAEhBR,QAAAA,IAAI,CAACE,KAAL,qBAAkBF,IAAI,CAACE,KAAvB,sBACGK,SAAS,GAAG,QADf,EAC0B,IAD1B;;AAIA,YAAIC,aAAJ,EAAmB;AACjBR,UAAAA,IAAI,CAACE,KAAL,CAAW,WAAWM,aAAtB,IAAuC,IAAvC;AACD;AACF;;AAED,aAAOR,IAAP;AACD;AA9DM;AALe,CAAX,CAAf","sourcesContent":["import Vue from 'vue';\r\nimport { consoleError } from '../../util/console';\r\n\r\nfunction isCssColor(color) {\r\n  return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/);\r\n}\r\n\r\nexport default Vue.extend({\r\n  name: 'colorable',\r\n  props: {\r\n    color: String\r\n  },\r\n  methods: {\r\n    setBackgroundColor(color, data = {}) {\r\n      if (typeof data.style === 'string') {\r\n        // istanbul ignore next\r\n        consoleError('style must be an object', this); // istanbul ignore next\r\n\r\n        return data;\r\n      }\r\n\r\n      if (typeof data.class === 'string') {\r\n        // istanbul ignore next\r\n        consoleError('class must be an object', this); // istanbul ignore next\r\n\r\n        return data;\r\n      }\r\n\r\n      if (isCssColor(color)) {\r\n        data.style = { ...data.style,\r\n          'background-color': `${color}`,\r\n          'border-color': `${color}`\r\n        };\r\n      } else if (color) {\r\n        data.class = { ...data.class,\r\n          [color]: true\r\n        };\r\n      }\r\n\r\n      return data;\r\n    },\r\n\r\n    setTextColor(color, data = {}) {\r\n      if (typeof data.style === 'string') {\r\n        // istanbul ignore next\r\n        consoleError('style must be an object', this); // istanbul ignore next\r\n\r\n        return data;\r\n      }\r\n\r\n      if (typeof data.class === 'string') {\r\n        // istanbul ignore next\r\n        consoleError('class must be an object', this); // istanbul ignore next\r\n\r\n        return data;\r\n      }\r\n\r\n      if (isCssColor(color)) {\r\n        data.style = { ...data.style,\r\n          color: `${color}`,\r\n          'caret-color': `${color}`\r\n        };\r\n      } else if (color) {\r\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2);\r\n        data.class = { ...data.class,\r\n          [colorName + '--text']: true\r\n        };\r\n\r\n        if (colorModifier) {\r\n          data.class['text--' + colorModifier] = true;\r\n        }\r\n      }\r\n\r\n      return data;\r\n    }\r\n\r\n  }\r\n});\r\n//# sourceMappingURL=index.js.map"]}]}