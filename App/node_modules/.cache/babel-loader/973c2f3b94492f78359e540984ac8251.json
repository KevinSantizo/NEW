{"remainingRequest":"C:\\Users\\APITECH\\Desktop\\Kevin\\NEW\\App\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\APITECH\\Desktop\\Kevin\\NEW\\App\\node_modules\\vuetify\\lib\\components\\VCheckbox\\VCheckbox.js","dependencies":[{"path":"C:\\Users\\APITECH\\Desktop\\Kevin\\NEW\\App\\node_modules\\vuetify\\lib\\components\\VCheckbox\\VCheckbox.js","mtime":1572369790628},{"path":"C:\\Users\\APITECH\\Desktop\\Kevin\\NEW\\App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572369744745},{"path":"C:\\Users\\APITECH\\Desktop\\Kevin\\NEW\\App\\node_modules\\babel-loader\\lib\\index.js","mtime":1572369741107}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"C:\\\\Users\\\\APITECH\\\\Desktop\\\\Kevin\\\\NEW\\\\App\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VCheckbox/VCheckbox.sass\";\nimport \"../../../src/styles/components/_selection-controls.sass\"; // Components\n\nimport VIcon from \"../VIcon\";\nimport VInput from \"../VInput\"; // Mixins\n\nimport Selectable from \"../../mixins/selectable\";\n/* @vue/component */\n\nexport default Selectable.extend({\n  name: 'v-checkbox',\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate'\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff'\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn'\n    }\n  },\n  data: function data() {\n    return {\n      inputIndeterminate: this.indeterminate\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, VInput.options.computed.classes.call(this), {\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate\n      });\n    },\n    computedIcon: function computedIcon() {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon;\n      } else if (this.isActive) {\n        return this.onIcon;\n      } else {\n        return this.offIcon;\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState: function validationState() {\n      if (this.disabled && !this.inputIndeterminate) return undefined;\n      if (this.hasError && this.shouldValidate) return 'error';\n      if (this.hasSuccess) return 'success';\n      if (this.hasColor) return this.computedColor;\n      return undefined;\n    }\n  },\n  watch: {\n    indeterminate: function indeterminate(val) {\n      var _this = this;\n\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(function () {\n        return _this.inputIndeterminate = val;\n      });\n    },\n    inputIndeterminate: function inputIndeterminate(val) {\n      this.$emit('update:indeterminate', val);\n    },\n    isActive: function isActive() {\n      if (!this.indeterminate) return;\n      this.inputIndeterminate = false;\n    }\n  },\n  methods: {\n    genCheckbox: function genCheckbox() {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.genInput('checkbox', _objectSpread({}, this.attrs$, {\n        'aria-checked': this.inputIndeterminate ? 'mixed' : this.isActive.toString()\n      })), this.genRipple(this.setTextColor(this.validationState)), this.$createElement(VIcon, this.setTextColor(this.validationState, {\n        props: {\n          dark: this.dark,\n          light: this.light\n        }\n      }), this.computedIcon)]);\n    },\n    genDefaultSlot: function genDefaultSlot() {\n      return [this.genCheckbox(), this.genLabel()];\n    }\n  }\n});",{"version":3,"sources":["C:/Users/APITECH/Desktop/Kevin/NEW/App/node_modules/vuetify/lib/components/VCheckbox/VCheckbox.js"],"names":["VIcon","VInput","Selectable","extend","name","props","indeterminate","Boolean","indeterminateIcon","type","String","default","offIcon","onIcon","data","inputIndeterminate","computed","classes","options","call","computedIcon","isActive","validationState","disabled","undefined","hasError","shouldValidate","hasSuccess","hasColor","computedColor","watch","val","$nextTick","$emit","methods","genCheckbox","$createElement","staticClass","genInput","attrs$","toString","genRipple","setTextColor","dark","light","genDefaultSlot","genLabel"],"mappings":"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","sourcesContent":["// Styles\r\nimport \"../../../src/components/VCheckbox/VCheckbox.sass\";\r\nimport \"../../../src/styles/components/_selection-controls.sass\"; // Components\r\n\r\nimport VIcon from '../VIcon';\r\nimport VInput from '../VInput'; // Mixins\r\n\r\nimport Selectable from '../../mixins/selectable';\r\n/* @vue/component */\r\n\r\nexport default Selectable.extend({\r\n  name: 'v-checkbox',\r\n  props: {\r\n    indeterminate: Boolean,\r\n    indeterminateIcon: {\r\n      type: String,\r\n      default: '$checkboxIndeterminate'\r\n    },\r\n    offIcon: {\r\n      type: String,\r\n      default: '$checkboxOff'\r\n    },\r\n    onIcon: {\r\n      type: String,\r\n      default: '$checkboxOn'\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      inputIndeterminate: this.indeterminate\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    classes() {\r\n      return { ...VInput.options.computed.classes.call(this),\r\n        'v-input--selection-controls': true,\r\n        'v-input--checkbox': true,\r\n        'v-input--indeterminate': this.inputIndeterminate\r\n      };\r\n    },\r\n\r\n    computedIcon() {\r\n      if (this.inputIndeterminate) {\r\n        return this.indeterminateIcon;\r\n      } else if (this.isActive) {\r\n        return this.onIcon;\r\n      } else {\r\n        return this.offIcon;\r\n      }\r\n    },\r\n\r\n    // Do not return undefined if disabled,\r\n    // according to spec, should still show\r\n    // a color when disabled and active\r\n    validationState() {\r\n      if (this.disabled && !this.inputIndeterminate) return undefined;\r\n      if (this.hasError && this.shouldValidate) return 'error';\r\n      if (this.hasSuccess) return 'success';\r\n      if (this.hasColor) return this.computedColor;\r\n      return undefined;\r\n    }\r\n\r\n  },\r\n  watch: {\r\n    indeterminate(val) {\r\n      // https://github.com/vuetifyjs/vuetify/issues/8270\r\n      this.$nextTick(() => this.inputIndeterminate = val);\r\n    },\r\n\r\n    inputIndeterminate(val) {\r\n      this.$emit('update:indeterminate', val);\r\n    },\r\n\r\n    isActive() {\r\n      if (!this.indeterminate) return;\r\n      this.inputIndeterminate = false;\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    genCheckbox() {\r\n      return this.$createElement('div', {\r\n        staticClass: 'v-input--selection-controls__input'\r\n      }, [this.genInput('checkbox', { ...this.attrs$,\r\n        'aria-checked': this.inputIndeterminate ? 'mixed' : this.isActive.toString()\r\n      }), this.genRipple(this.setTextColor(this.validationState)), this.$createElement(VIcon, this.setTextColor(this.validationState, {\r\n        props: {\r\n          dark: this.dark,\r\n          light: this.light\r\n        }\r\n      }), this.computedIcon)]);\r\n    },\r\n\r\n    genDefaultSlot() {\r\n      return [this.genCheckbox(), this.genLabel()];\r\n    }\r\n\r\n  }\r\n});\r\n//# sourceMappingURL=VCheckbox.js.map"]}]}