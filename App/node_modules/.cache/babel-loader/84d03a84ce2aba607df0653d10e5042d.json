{"remainingRequest":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\CERTIFI\\App\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\TETO PARKER\\Desktop\\kevin\\CERTIFI\\App\\node_modules\\vuetify\\lib\\services\\theme\\index.js","dependencies":[{"path":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\CERTIFI\\App\\node_modules\\vuetify\\lib\\services\\theme\\index.js","mtime":1571606069331},{"path":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\CERTIFI\\App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1571605645513},{"path":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\CERTIFI\\App\\node_modules\\babel-loader\\lib\\index.js","mtime":1571605590929}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport _classCallCheck from \"C:\\\\Users\\\\TETO PARKER\\\\Desktop\\\\kevin\\\\CERTIFI\\\\App\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\TETO PARKER\\\\Desktop\\\\kevin\\\\CERTIFI\\\\App\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\TETO PARKER\\\\Desktop\\\\kevin\\\\CERTIFI\\\\App\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\TETO PARKER\\\\Desktop\\\\kevin\\\\CERTIFI\\\\App\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\TETO PARKER\\\\Desktop\\\\kevin\\\\CERTIFI\\\\App\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/inherits\";\n\n/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from \"../service\"; // Utilities\n\nimport * as ThemeUtils from \"./utils\"; // Types\n\nimport Vue from 'vue';\nexport var Theme =\n/*#__PURE__*/\nfunction (_Service) {\n  _inherits(Theme, _Service);\n\n  function Theme() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Theme);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Theme).call(this));\n    _this.disabled = false;\n    _this.themes = {\n      light: {\n        primary: '#1976D2',\n        secondary: '#424242',\n        accent: '#82B1FF',\n        error: '#FF5252',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      },\n      dark: {\n        primary: '#2196F3',\n        secondary: '#424242',\n        accent: '#FF4081',\n        error: '#FF5252',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      }\n    };\n    _this.defaults = _this.themes;\n    _this.isDark = null;\n    _this.vueInstance = null;\n    _this.vueMeta = false;\n\n    if (options.disable) {\n      _this.disabled = true;\n      return _possibleConstructorReturn(_this);\n    }\n\n    _this.options = options.options;\n    _this.dark = Boolean(options.dark);\n    var themes = options.themes || {};\n    _this.themes = {\n      dark: _this.fillVariant(themes.dark, true),\n      light: _this.fillVariant(themes.light, false)\n    };\n    return _this;\n  } // When setting css, check for element\n  // and apply new values\n\n\n  _createClass(Theme, [{\n    key: \"applyTheme\",\n    // Apply current theme default\n    // only called on client side\n    value: function applyTheme() {\n      if (this.disabled) return this.clearCss();\n      this.css = this.generatedStyles;\n    }\n  }, {\n    key: \"clearCss\",\n    value: function clearCss() {\n      this.css = '';\n    } // Initialize theme for SSR and SPA\n    // Attach to ssrContext head or\n    // apply new theme to document\n\n  }, {\n    key: \"init\",\n    value: function init(root, ssrContext) {\n      if (this.disabled) return;\n      /* istanbul ignore else */\n\n      if (root.$meta) {\n        this.initVueMeta(root);\n      } else if (ssrContext) {\n        this.initSSR(ssrContext);\n      }\n\n      this.initTheme();\n    } // Allows for you to set target theme\n\n  }, {\n    key: \"setTheme\",\n    value: function setTheme(theme, value) {\n      this.themes[theme] = Object.assign(this.themes[theme], value);\n      this.applyTheme();\n    } // Reset theme defaults\n\n  }, {\n    key: \"resetThemes\",\n    value: function resetThemes() {\n      this.themes.light = Object.assign({}, this.defaults.light);\n      this.themes.dark = Object.assign({}, this.defaults.dark);\n      this.applyTheme();\n    } // Check for existence of style element\n\n  }, {\n    key: \"checkOrCreateStyleElement\",\n    value: function checkOrCreateStyleElement() {\n      this.styleEl = document.getElementById('vuetify-theme-stylesheet');\n      /* istanbul ignore next */\n\n      if (this.styleEl) return true;\n      this.genStyleElement(); // If doesn't have it, create it\n\n      return Boolean(this.styleEl);\n    }\n  }, {\n    key: \"fillVariant\",\n    value: function fillVariant() {\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var dark = arguments.length > 1 ? arguments[1] : undefined;\n      var defaultTheme = this.themes[dark ? 'dark' : 'light'];\n      return Object.assign({}, defaultTheme, theme);\n    } // Generate the style element\n    // if applicable\n\n  }, {\n    key: \"genStyleElement\",\n    value: function genStyleElement() {\n      if (typeof document === 'undefined') return;\n      /* istanbul ignore next */\n\n      var options = this.options || {};\n      this.styleEl = document.createElement('style');\n      this.styleEl.type = 'text/css';\n      this.styleEl.id = 'vuetify-theme-stylesheet';\n\n      if (options.cspNonce) {\n        this.styleEl.setAttribute('nonce', options.cspNonce);\n      }\n\n      document.head.appendChild(this.styleEl);\n    }\n  }, {\n    key: \"initVueMeta\",\n    value: function initVueMeta(root) {\n      var _this2 = this;\n\n      this.vueMeta = true;\n      var meta = root.$meta();\n      var metaKeyName = typeof meta.getOptions === 'function' ? meta.getOptions().keyName : 'metaInfo';\n      var metaInfo = root.$options[metaKeyName] || {};\n\n      root.$options[metaKeyName] = function () {\n        metaInfo.style = metaInfo.style || [];\n        var vuetifyStylesheet = metaInfo.style.find(function (s) {\n          return s.id === 'vuetify-theme-stylesheet';\n        });\n\n        if (!vuetifyStylesheet) {\n          metaInfo.style.push({\n            cssText: _this2.generatedStyles,\n            type: 'text/css',\n            id: 'vuetify-theme-stylesheet',\n            nonce: _this2.options && _this2.options.cspNonce || undefined\n          });\n        } else {\n          vuetifyStylesheet.cssText = _this2.generatedStyles;\n        }\n\n        return metaInfo;\n      };\n    }\n  }, {\n    key: \"initSSR\",\n    value: function initSSR(ssrContext) {\n      var options = this.options || {}; // SSR\n\n      var nonce = options.cspNonce ? \" nonce=\\\"\".concat(options.cspNonce, \"\\\"\") : '';\n      ssrContext.head = ssrContext.head || '';\n      ssrContext.head += \"<style type=\\\"text/css\\\" id=\\\"vuetify-theme-stylesheet\\\"\".concat(nonce, \">\").concat(this.generatedStyles, \"</style>\");\n    }\n  }, {\n    key: \"initTheme\",\n    value: function initTheme() {\n      var _this3 = this;\n\n      // Only watch for reactivity on client side\n      if (typeof document === 'undefined') return; // If we get here somehow, ensure\n      // existing instance is removed\n\n      if (this.vueInstance) this.vueInstance.$destroy(); // Use Vue instance to track reactivity\n      // TODO: Update to use RFC if merged\n      // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n\n      this.vueInstance = new Vue({\n        data: {\n          themes: this.themes\n        },\n        watch: {\n          themes: {\n            immediate: true,\n            deep: true,\n            handler: function handler() {\n              return _this3.applyTheme();\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"css\",\n    set: function set(val) {\n      if (this.vueMeta) return;\n      this.checkOrCreateStyleElement() && (this.styleEl.innerHTML = val);\n    }\n  }, {\n    key: \"dark\",\n    set: function set(val) {\n      var oldDark = this.isDark;\n      this.isDark = val; // Only apply theme after dark\n      // has already been set before\n\n      oldDark != null && this.applyTheme();\n    },\n    get: function get() {\n      return Boolean(this.isDark);\n    }\n  }, {\n    key: \"currentTheme\",\n    get: function get() {\n      var target = this.dark ? 'dark' : 'light';\n      return this.themes[target];\n    }\n  }, {\n    key: \"generatedStyles\",\n    get: function get() {\n      var theme = this.parsedTheme;\n      /* istanbul ignore next */\n\n      var options = this.options || {};\n      var css;\n\n      if (options.themeCache != null) {\n        css = options.themeCache.get(theme);\n        /* istanbul ignore if */\n\n        if (css != null) return css;\n      }\n\n      css = ThemeUtils.genStyles(theme, options.customProperties);\n\n      if (options.minifyTheme != null) {\n        css = options.minifyTheme(css);\n      }\n\n      if (options.themeCache != null) {\n        options.themeCache.set(theme, css);\n      }\n\n      return css;\n    }\n  }, {\n    key: \"parsedTheme\",\n    get: function get() {\n      /* istanbul ignore next */\n      var theme = this.currentTheme || {};\n      return ThemeUtils.parse(theme);\n    }\n  }]);\n\n  return Theme;\n}(Service);\nTheme.property = 'theme';",{"version":3,"sources":["C:/Users/TETO PARKER/Desktop/kevin/CERTIFI/App/node_modules/vuetify/lib/services/theme/index.js"],"names":["Service","ThemeUtils","Vue","Theme","options","disabled","themes","light","primary","secondary","accent","error","info","success","warning","dark","defaults","isDark","vueInstance","vueMeta","disable","Boolean","fillVariant","clearCss","css","generatedStyles","root","ssrContext","$meta","initVueMeta","initSSR","initTheme","theme","value","Object","assign","applyTheme","styleEl","document","getElementById","genStyleElement","defaultTheme","createElement","type","id","cspNonce","setAttribute","head","appendChild","meta","metaKeyName","getOptions","keyName","metaInfo","$options","style","vuetifyStylesheet","find","s","push","cssText","nonce","undefined","$destroy","data","watch","immediate","deep","handler","val","checkOrCreateStyleElement","innerHTML","oldDark","target","parsedTheme","themeCache","get","genStyles","customProperties","minifyTheme","set","currentTheme","parse","property"],"mappings":"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","sourcesContent":["/* eslint-disable no-multi-spaces */\r\n// Extensions\r\nimport { Service } from '../service'; // Utilities\r\n\r\nimport * as ThemeUtils from './utils'; // Types\r\n\r\nimport Vue from 'vue';\r\nexport class Theme extends Service {\r\n  constructor(options = {}) {\r\n    super();\r\n    this.disabled = false;\r\n    this.themes = {\r\n      light: {\r\n        primary: '#1976D2',\r\n        secondary: '#424242',\r\n        accent: '#82B1FF',\r\n        error: '#FF5252',\r\n        info: '#2196F3',\r\n        success: '#4CAF50',\r\n        warning: '#FB8C00'\r\n      },\r\n      dark: {\r\n        primary: '#2196F3',\r\n        secondary: '#424242',\r\n        accent: '#FF4081',\r\n        error: '#FF5252',\r\n        info: '#2196F3',\r\n        success: '#4CAF50',\r\n        warning: '#FB8C00'\r\n      }\r\n    };\r\n    this.defaults = this.themes;\r\n    this.isDark = null;\r\n    this.vueInstance = null;\r\n    this.vueMeta = false;\r\n\r\n    if (options.disable) {\r\n      this.disabled = true;\r\n      return;\r\n    }\r\n\r\n    this.options = options.options;\r\n    this.dark = Boolean(options.dark);\r\n    const themes = options.themes || {};\r\n    this.themes = {\r\n      dark: this.fillVariant(themes.dark, true),\r\n      light: this.fillVariant(themes.light, false)\r\n    };\r\n  } // When setting css, check for element\r\n  // and apply new values\r\n\r\n\r\n  set css(val) {\r\n    if (this.vueMeta) return;\r\n    this.checkOrCreateStyleElement() && (this.styleEl.innerHTML = val);\r\n  }\r\n\r\n  set dark(val) {\r\n    const oldDark = this.isDark;\r\n    this.isDark = val; // Only apply theme after dark\r\n    // has already been set before\r\n\r\n    oldDark != null && this.applyTheme();\r\n  }\r\n\r\n  get dark() {\r\n    return Boolean(this.isDark);\r\n  } // Apply current theme default\r\n  // only called on client side\r\n\r\n\r\n  applyTheme() {\r\n    if (this.disabled) return this.clearCss();\r\n    this.css = this.generatedStyles;\r\n  }\r\n\r\n  clearCss() {\r\n    this.css = '';\r\n  } // Initialize theme for SSR and SPA\r\n  // Attach to ssrContext head or\r\n  // apply new theme to document\r\n\r\n\r\n  init(root, ssrContext) {\r\n    if (this.disabled) return;\r\n    /* istanbul ignore else */\r\n\r\n    if (root.$meta) {\r\n      this.initVueMeta(root);\r\n    } else if (ssrContext) {\r\n      this.initSSR(ssrContext);\r\n    }\r\n\r\n    this.initTheme();\r\n  } // Allows for you to set target theme\r\n\r\n\r\n  setTheme(theme, value) {\r\n    this.themes[theme] = Object.assign(this.themes[theme], value);\r\n    this.applyTheme();\r\n  } // Reset theme defaults\r\n\r\n\r\n  resetThemes() {\r\n    this.themes.light = Object.assign({}, this.defaults.light);\r\n    this.themes.dark = Object.assign({}, this.defaults.dark);\r\n    this.applyTheme();\r\n  } // Check for existence of style element\r\n\r\n\r\n  checkOrCreateStyleElement() {\r\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet');\r\n    /* istanbul ignore next */\r\n\r\n    if (this.styleEl) return true;\r\n    this.genStyleElement(); // If doesn't have it, create it\r\n\r\n    return Boolean(this.styleEl);\r\n  }\r\n\r\n  fillVariant(theme = {}, dark) {\r\n    const defaultTheme = this.themes[dark ? 'dark' : 'light'];\r\n    return Object.assign({}, defaultTheme, theme);\r\n  } // Generate the style element\r\n  // if applicable\r\n\r\n\r\n  genStyleElement() {\r\n    if (typeof document === 'undefined') return;\r\n    /* istanbul ignore next */\r\n\r\n    const options = this.options || {};\r\n    this.styleEl = document.createElement('style');\r\n    this.styleEl.type = 'text/css';\r\n    this.styleEl.id = 'vuetify-theme-stylesheet';\r\n\r\n    if (options.cspNonce) {\r\n      this.styleEl.setAttribute('nonce', options.cspNonce);\r\n    }\r\n\r\n    document.head.appendChild(this.styleEl);\r\n  }\r\n\r\n  initVueMeta(root) {\r\n    this.vueMeta = true;\r\n    const meta = root.$meta();\r\n    const metaKeyName = typeof meta.getOptions === 'function' ? meta.getOptions().keyName : 'metaInfo';\r\n    const metaInfo = root.$options[metaKeyName] || {};\r\n\r\n    root.$options[metaKeyName] = () => {\r\n      metaInfo.style = metaInfo.style || [];\r\n      const vuetifyStylesheet = metaInfo.style.find(s => s.id === 'vuetify-theme-stylesheet');\r\n\r\n      if (!vuetifyStylesheet) {\r\n        metaInfo.style.push({\r\n          cssText: this.generatedStyles,\r\n          type: 'text/css',\r\n          id: 'vuetify-theme-stylesheet',\r\n          nonce: this.options && this.options.cspNonce || undefined\r\n        });\r\n      } else {\r\n        vuetifyStylesheet.cssText = this.generatedStyles;\r\n      }\r\n\r\n      return metaInfo;\r\n    };\r\n  }\r\n\r\n  initSSR(ssrContext) {\r\n    const options = this.options || {}; // SSR\r\n\r\n    const nonce = options.cspNonce ? ` nonce=\"${options.cspNonce}\"` : '';\r\n    ssrContext.head = ssrContext.head || '';\r\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`;\r\n  }\r\n\r\n  initTheme() {\r\n    // Only watch for reactivity on client side\r\n    if (typeof document === 'undefined') return; // If we get here somehow, ensure\r\n    // existing instance is removed\r\n\r\n    if (this.vueInstance) this.vueInstance.$destroy(); // Use Vue instance to track reactivity\r\n    // TODO: Update to use RFC if merged\r\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\r\n\r\n    this.vueInstance = new Vue({\r\n      data: {\r\n        themes: this.themes\r\n      },\r\n      watch: {\r\n        themes: {\r\n          immediate: true,\r\n          deep: true,\r\n          handler: () => this.applyTheme()\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  get currentTheme() {\r\n    const target = this.dark ? 'dark' : 'light';\r\n    return this.themes[target];\r\n  }\r\n\r\n  get generatedStyles() {\r\n    const theme = this.parsedTheme;\r\n    /* istanbul ignore next */\r\n\r\n    const options = this.options || {};\r\n    let css;\r\n\r\n    if (options.themeCache != null) {\r\n      css = options.themeCache.get(theme);\r\n      /* istanbul ignore if */\r\n\r\n      if (css != null) return css;\r\n    }\r\n\r\n    css = ThemeUtils.genStyles(theme, options.customProperties);\r\n\r\n    if (options.minifyTheme != null) {\r\n      css = options.minifyTheme(css);\r\n    }\r\n\r\n    if (options.themeCache != null) {\r\n      options.themeCache.set(theme, css);\r\n    }\r\n\r\n    return css;\r\n  }\r\n\r\n  get parsedTheme() {\r\n    /* istanbul ignore next */\r\n    const theme = this.currentTheme || {};\r\n    return ThemeUtils.parse(theme);\r\n  }\r\n\r\n}\r\nTheme.property = 'theme';\r\n//# sourceMappingURL=index.js.map"]}]}