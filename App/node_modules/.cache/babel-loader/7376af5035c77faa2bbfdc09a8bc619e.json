{"remainingRequest":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\CERTIFI\\App\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\TETO PARKER\\Desktop\\kevin\\CERTIFI\\App\\node_modules\\vuetify\\lib\\components\\VFileInput\\VFileInput.js","dependencies":[{"path":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\CERTIFI\\App\\node_modules\\vuetify\\lib\\components\\VFileInput\\VFileInput.js","mtime":1571606061813},{"path":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\CERTIFI\\App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1571605645513},{"path":"C:\\Users\\TETO PARKER\\Desktop\\kevin\\CERTIFI\\App\\node_modules\\babel-loader\\lib\\index.js","mtime":1571605590929}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _toConsumableArray from \"C:\\\\Users\\\\TETO PARKER\\\\Desktop\\\\kevin\\\\CERTIFI\\\\App\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"C:\\\\Users\\\\TETO PARKER\\\\Desktop\\\\kevin\\\\CERTIFI\\\\App\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport _typeof from \"C:\\\\Users\\\\TETO PARKER\\\\Desktop\\\\kevin\\\\CERTIFI\\\\App\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VFileInput/VFileInput.sass\"; // Extensions\n\nimport VTextField from \"../VTextField\"; // Components\n\nimport { VChip } from \"../VChip\"; // Utilities\n\nimport { humanReadableFileSize, wrapInArray } from \"../../util/helpers\";\nimport { consoleError } from \"../../util/console\";\nexport default VTextField.extend({\n  name: 'v-file-input',\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize'\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter'\n    },\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file'\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: function validator(v) {\n        return typeof v === 'boolean' || [1000, 1024].includes(v);\n      }\n    },\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22\n    },\n    type: {\n      type: String,\n      default: 'file'\n    },\n    value: {\n      default: function _default() {\n        return [];\n      },\n      validator: function validator(val) {\n        return _typeof(val) === 'object' || Array.isArray(val);\n      }\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, VTextField.options.computed.classes.call(this), {\n        'v-file-input': true\n      });\n    },\n    counterValue: function counterValue() {\n      var fileCount = this.isMultiple && this.lazyValue ? this.lazyValue.length : this.lazyValue instanceof File ? 1 : 0;\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount);\n      var bytes = this.internalArrayValue.reduce(function (size, file) {\n        return size + file.size;\n      }, 0);\n      return this.$vuetify.lang.t(this.counterSizeString, fileCount, humanReadableFileSize(bytes, this.base === 1024));\n    },\n    internalArrayValue: function internalArrayValue() {\n      return Array.isArray(this.internalValue) ? this.internalValue : wrapInArray(this.internalValue);\n    },\n    internalValue: {\n      get: function get() {\n        return this.lazyValue;\n      },\n      set: function set(val) {\n        this.lazyValue = val;\n        this.$emit('change', this.lazyValue);\n      }\n    },\n    isDirty: function isDirty() {\n      return this.internalArrayValue.length > 0;\n    },\n    isLabelActive: function isLabelActive() {\n      return this.isDirty;\n    },\n    isMultiple: function isMultiple() {\n      return this.$attrs.hasOwnProperty('multiple');\n    },\n    text: function text() {\n      var _this = this;\n\n      if (!this.isDirty) return [this.placeholder];\n      return this.internalArrayValue.map(function (file) {\n        var name = _this.truncateText(file.name);\n\n        return !_this.showSize ? name : \"\".concat(name, \" (\").concat(humanReadableFileSize(file.size, _this.base === 1024), \")\");\n      });\n    },\n    base: function base() {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined;\n    },\n    hasChips: function hasChips() {\n      return this.chips || this.smallChips;\n    }\n  },\n  watch: {\n    readonly: {\n      handler: function handler(v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    clearableCallback: function clearableCallback() {\n      this.internalValue = this.isMultiple ? [] : null;\n      this.$refs.input.value = '';\n    },\n    genChips: function genChips() {\n      var _this2 = this;\n\n      if (!this.isDirty) return [];\n      return this.text.map(function (text, index) {\n        return _this2.$createElement(VChip, {\n          props: {\n            small: _this2.smallChips\n          },\n          on: {\n            'click:close': function clickClose() {\n              var internalValue = _this2.internalValue;\n              internalValue.splice(index, 1);\n              _this2.internalValue = internalValue; // Trigger the watcher\n            }\n          }\n        }, [text]);\n      });\n    },\n    genInput: function genInput() {\n      var input = VTextField.options.methods.genInput.call(this); // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n\n      delete input.data.domProps.value; // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n\n      delete input.data.on.input;\n      input.data.on.change = this.onInput;\n      return [this.genSelections(), input];\n    },\n    genPrependSlot: function genPrependSlot() {\n      var _this3 = this;\n\n      if (!this.prependIcon) return null;\n      var icon = this.genIcon('prepend', function () {\n        _this3.$refs.input.click();\n      });\n      return this.genSlot('prepend', 'outer', [icon]);\n    },\n    genSelectionText: function genSelectionText() {\n      var length = this.text.length;\n      if (length < 2) return this.text;\n      if (this.showSize && !this.counter) return [this.counterValue];\n      return [this.$vuetify.lang.t(this.counterString, length)];\n    },\n    genSelections: function genSelections() {\n      var _this4 = this;\n\n      var children = [];\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach(function (file, index) {\n          if (!_this4.$scopedSlots.selection) return;\n          children.push(_this4.$scopedSlots.selection({\n            text: _this4.text[index],\n            file: file,\n            index: index\n          }));\n        });\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText());\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection\n        },\n        on: {\n          click: function click() {\n            return _this4.$refs.input.click();\n          }\n        }\n      }, children);\n    },\n    onInput: function onInput(e) {\n      var files = _toConsumableArray(e.target.files || []);\n\n      this.internalValue = this.isMultiple ? files : files[0]; // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n\n      this.initialValue = this.internalValue;\n    },\n    onKeyDown: function onKeyDown(e) {\n      this.$emit('keydown', e);\n    },\n    truncateText: function truncateText(str) {\n      if (str.length < Number(this.truncateLength)) return str;\n      var charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2);\n      return \"\".concat(str.slice(0, charsKeepOneSide), \"\\u2026\").concat(str.slice(str.length - charsKeepOneSide));\n    }\n  }\n});",{"version":3,"sources":["C:/Users/TETO PARKER/Desktop/kevin/CERTIFI/App/node_modules/vuetify/lib/components/VFileInput/VFileInput.js"],"names":["VTextField","VChip","humanReadableFileSize","wrapInArray","consoleError","extend","name","model","prop","event","props","chips","Boolean","clearable","type","default","counterSizeString","String","counterString","placeholder","prependIcon","readonly","showSize","Number","validator","v","includes","smallChips","truncateLength","value","val","Array","isArray","computed","classes","options","call","counterValue","fileCount","isMultiple","lazyValue","length","File","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","file","base","internalValue","get","set","$emit","isDirty","isLabelActive","$attrs","hasOwnProperty","text","map","truncateText","undefined","hasChips","watch","handler","immediate","methods","clearableCallback","$refs","input","genChips","index","$createElement","small","on","splice","genInput","data","domProps","change","onInput","genSelections","genPrependSlot","icon","genIcon","click","genSlot","genSelectionText","counter","children","$scopedSlots","selection","forEach","push","staticClass","class","e","files","target","initialValue","onKeyDown","str","charsKeepOneSide","Math","floor","slice"],"mappings":"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","sourcesContent":["// Styles\r\nimport \"../../../src/components/VFileInput/VFileInput.sass\"; // Extensions\r\n\r\nimport VTextField from '../VTextField'; // Components\r\n\r\nimport { VChip } from '../VChip'; // Utilities\r\n\r\nimport { humanReadableFileSize, wrapInArray } from '../../util/helpers';\r\nimport { consoleError } from '../../util/console';\r\nexport default VTextField.extend({\r\n  name: 'v-file-input',\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change'\r\n  },\r\n  props: {\r\n    chips: Boolean,\r\n    clearable: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    counterSizeString: {\r\n      type: String,\r\n      default: '$vuetify.fileInput.counterSize'\r\n    },\r\n    counterString: {\r\n      type: String,\r\n      default: '$vuetify.fileInput.counter'\r\n    },\r\n    placeholder: String,\r\n    prependIcon: {\r\n      type: String,\r\n      default: '$file'\r\n    },\r\n    readonly: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    showSize: {\r\n      type: [Boolean, Number],\r\n      default: false,\r\n      validator: v => {\r\n        return typeof v === 'boolean' || [1000, 1024].includes(v);\r\n      }\r\n    },\r\n    smallChips: Boolean,\r\n    truncateLength: {\r\n      type: [Number, String],\r\n      default: 22\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'file'\r\n    },\r\n    value: {\r\n      default: () => [],\r\n      validator: val => {\r\n        return typeof val === 'object' || Array.isArray(val);\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    classes() {\r\n      return { ...VTextField.options.computed.classes.call(this),\r\n        'v-file-input': true\r\n      };\r\n    },\r\n\r\n    counterValue() {\r\n      const fileCount = this.isMultiple && this.lazyValue ? this.lazyValue.length : this.lazyValue instanceof File ? 1 : 0;\r\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount);\r\n      const bytes = this.internalArrayValue.reduce((size, file) => size + file.size, 0);\r\n      return this.$vuetify.lang.t(this.counterSizeString, fileCount, humanReadableFileSize(bytes, this.base === 1024));\r\n    },\r\n\r\n    internalArrayValue() {\r\n      return Array.isArray(this.internalValue) ? this.internalValue : wrapInArray(this.internalValue);\r\n    },\r\n\r\n    internalValue: {\r\n      get() {\r\n        return this.lazyValue;\r\n      },\r\n\r\n      set(val) {\r\n        this.lazyValue = val;\r\n        this.$emit('change', this.lazyValue);\r\n      }\r\n\r\n    },\r\n\r\n    isDirty() {\r\n      return this.internalArrayValue.length > 0;\r\n    },\r\n\r\n    isLabelActive() {\r\n      return this.isDirty;\r\n    },\r\n\r\n    isMultiple() {\r\n      return this.$attrs.hasOwnProperty('multiple');\r\n    },\r\n\r\n    text() {\r\n      if (!this.isDirty) return [this.placeholder];\r\n      return this.internalArrayValue.map(file => {\r\n        const name = this.truncateText(file.name);\r\n        return !this.showSize ? name : `${name} (${humanReadableFileSize(file.size, this.base === 1024)})`;\r\n      });\r\n    },\r\n\r\n    base() {\r\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined;\r\n    },\r\n\r\n    hasChips() {\r\n      return this.chips || this.smallChips;\r\n    }\r\n\r\n  },\r\n  watch: {\r\n    readonly: {\r\n      handler(v) {\r\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this);\r\n      },\r\n\r\n      immediate: true\r\n    }\r\n  },\r\n  methods: {\r\n    clearableCallback() {\r\n      this.internalValue = this.isMultiple ? [] : null;\r\n      this.$refs.input.value = '';\r\n    },\r\n\r\n    genChips() {\r\n      if (!this.isDirty) return [];\r\n      return this.text.map((text, index) => this.$createElement(VChip, {\r\n        props: {\r\n          small: this.smallChips\r\n        },\r\n        on: {\r\n          'click:close': () => {\r\n            const internalValue = this.internalValue;\r\n            internalValue.splice(index, 1);\r\n            this.internalValue = internalValue; // Trigger the watcher\r\n          }\r\n        }\r\n      }, [text]));\r\n    },\r\n\r\n    genInput() {\r\n      const input = VTextField.options.methods.genInput.call(this); // We should not be setting value\r\n      // programmatically on the input\r\n      // when it is using type=\"file\"\r\n\r\n      delete input.data.domProps.value; // This solves an issue in Safari where\r\n      // nothing happens when adding a file\r\n      // do to the input event not firing\r\n      // https://github.com/vuetifyjs/vuetify/issues/7941\r\n\r\n      delete input.data.on.input;\r\n      input.data.on.change = this.onInput;\r\n      return [this.genSelections(), input];\r\n    },\r\n\r\n    genPrependSlot() {\r\n      if (!this.prependIcon) return null;\r\n      const icon = this.genIcon('prepend', () => {\r\n        this.$refs.input.click();\r\n      });\r\n      return this.genSlot('prepend', 'outer', [icon]);\r\n    },\r\n\r\n    genSelectionText() {\r\n      const length = this.text.length;\r\n      if (length < 2) return this.text;\r\n      if (this.showSize && !this.counter) return [this.counterValue];\r\n      return [this.$vuetify.lang.t(this.counterString, length)];\r\n    },\r\n\r\n    genSelections() {\r\n      const children = [];\r\n\r\n      if (this.isDirty && this.$scopedSlots.selection) {\r\n        this.internalArrayValue.forEach((file, index) => {\r\n          if (!this.$scopedSlots.selection) return;\r\n          children.push(this.$scopedSlots.selection({\r\n            text: this.text[index],\r\n            file,\r\n            index\r\n          }));\r\n        });\r\n      } else {\r\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText());\r\n      }\r\n\r\n      return this.$createElement('div', {\r\n        staticClass: 'v-file-input__text',\r\n        class: {\r\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\r\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection\r\n        },\r\n        on: {\r\n          click: () => this.$refs.input.click()\r\n        }\r\n      }, children);\r\n    },\r\n\r\n    onInput(e) {\r\n      const files = [...(e.target.files || [])];\r\n      this.internalValue = this.isMultiple ? files : files[0]; // Set initialValue here otherwise isFocused\r\n      // watcher in VTextField will emit a change\r\n      // event whenever the component is blurred\r\n\r\n      this.initialValue = this.internalValue;\r\n    },\r\n\r\n    onKeyDown(e) {\r\n      this.$emit('keydown', e);\r\n    },\r\n\r\n    truncateText(str) {\r\n      if (str.length < Number(this.truncateLength)) return str;\r\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2);\r\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`;\r\n    }\r\n\r\n  }\r\n});\r\n//# sourceMappingURL=VFileInput.js.map"]}]}